<?php

/**
 * Theme Functions
 *
 * Please do not edit this file. This file is part of the CyberChimps Framework and all modifications
 * should be made in a child theme.
 *
 * @category CyberChimps Framework
 * @package  Framework
 * @since    1.0
 * @author   CyberChimps
 * @license  http://www.opensource.org/licenses/gpl-license.php GPL v3.0 (or later)
 * @link     http://www.cyberchimps.com/
 */
// Load text domain.
function fitness_text_domain() {
	load_theme_textdomain( 'fitness', get_template_directory() . '/inc/languages' );
}

add_action( 'after_setup_theme', 'fitness_text_domain' );

// Load Core
require_once( get_template_directory() . '/cyberchimps/init.php' );

// Set the content width based on the theme's design and stylesheet.
if ( ! isset( $content_width ) ) {
	$content_width = 640;
} /* pixels */

/**
 * Set theme up
 */
function fitness_theme_setup() {
	//image size for the blog page
	add_image_size( 'blog-page', 1000, 600, true ); //830 pixels wide and 180 pixels tall
}

add_action( 'after_theme_setup', 'fitness_theme_setup' );

function fitness_add_site_info() {
	?>
	<p>&copy; Company Name</p>
	<?php
}

add_action( 'cyberchimps_site_info', 'fitness_add_site_info' );

if ( ! function_exists( 'cyberchimps_comment' ) ) :

// Template for comments and pingbacks.
// Used as a callback by wp_list_comments() for displaying the comments.
	function cyberchimps_comment( $comment, $args, $depth ) {
		$GLOBALS[ 'comment' ] = $comment;
		switch ( $comment->comment_type ) :
			case 'pingback' :
			case 'trackback' :
				?>
				<li class="post pingback">
					<p><?php _e( 'Pingback:', 'fitness' ); ?> <?php comment_author_link(); ?><?php edit_comment_link( __( '(Edit)', 'fitness' ), ' ' ); ?></p>
					<?php
					break;
				default :
					?>
				<li <?php comment_class(); ?> id="li-comment-<?php comment_ID(); ?>">
					<article id="comment-<?php comment_ID(); ?>" class="comment hreview">
						<footer>
							<div class="comment-author reviewer vcard">
								<?php echo get_avatar( $comment, 40 ); ?>
								<?php printf( '%s <span class="says">' . __( 'says:', 'fitness' ) . '</span>', sprintf( '<cite class="fn">%s</cite>', get_comment_author_link() ) ); ?>
							</div>
							<!-- .comment-author .vcard -->
							<?php if ( $comment->comment_approved == '0' ) : ?>
								<em><?php _e( 'Your comment is awaiting moderation.', 'fitness' ); ?></em>
								<br/>
							<?php endif; ?>

							<div class="comment-meta commentmetadata">
								<a href="<?php echo esc_url( get_comment_link( $comment->comment_ID ) ); ?>" class="dtreviewed">
									<time pubdate datetime="<?php comment_time( 'c' ); ?>">
										<?php
										/* translators: 1: date, 2: time */
										printf( __( '%1$s at %2$s', 'fitness' ), get_comment_date(), get_comment_time() );
										?>
									</time>
								</a>
								<?php edit_comment_link( __( '(Edit)', 'fitness' ), ' ' );
								?>
							</div>
							<!-- .comment-meta .commentmetadata -->
						</footer>

						<div class="comment-content"><?php comment_text(); ?></div>

						<div class="reply">
							<?php comment_reply_link( array_merge( $args, array( 'depth' => $depth, 'max_depth' => $args[ 'max_depth' ] ) ) ); ?>
						</div>
						<!-- .reply -->
					</article>
					<!-- #comment-## -->

					<?php
					break;
			endswitch;
		}

	endif; // ends check for cyberchimps_comment()
// core options customization Names and URL's
//Pro or Free

	function cyberchimps_theme_check() {
		$level = 'free';

		return $level;
	}

//Theme Name
	function fitness_options_theme_name() {
		$text = 'Fitness';

		return $text;
	}

//Doc's URL
	function fitness_options_documentation_url() {
		$url = 'http://cyberchimps.com/help/';

		return $url;
	}

// Support Forum URL
	function fitness_options_support_forum() {
		$url = 'http://cyberchimps.com/forum/free/fitness/';

		return $url;
	}

//Page Options Help URL
	function fitness_options_page_options_help() {
		$url = 'http://cyberchimps.com/element-how-tos/';

		return $url;
	}

// Slider Options Help URL
	function fitness_options_slider_options_help() {
		$url = 'http://cyberchimps.com/faq/how-to-use-the-ifeature-pro-slider/';

		return $url;
	}

	add_filter( 'cyberchimps_current_theme_name', 'fitness_options_theme_name', 1 );
	add_filter( 'cyberchimps_documentation', 'fitness_options_documentation_url' );
	add_filter( 'cyberchimps_support_forum', 'fitness_options_support_forum' );
	add_filter( 'cyberchimps_page_options_help', 'fitness_options_page_options_help' );
	add_filter( 'cyberchimps_slider_options_help', 'fitness_options_slider_options_help' );

	// enabling theme support for title tag
	function fitness_title_setup()
	{
		add_theme_support( 'title-tag' );
	}
	add_action( 'after_setup_theme', 'fitness_title_setup' );
	
// Help Section
	function fitness_options_help_header() {
		$text = 'Fitness';

		return $text;
	}

	function fitness_options_help_sub_header() {
		$text = __( 'Fitness a Clean and Responsive Wordpress Theme', 'fitness' );

		return $text;
	}

	add_filter( 'cyberchimps_help_heading', 'fitness_options_help_header' );
	add_filter( 'cyberchimps_help_sub_heading', 'fitness_options_help_sub_header' );

// Branding images and defaults
//theme specific skin options in array. Must always include option default
	function fitness_skin_color_options( $options ) {
		// Get path of image
		$imagepath = get_template_directory_uri() . '/inc/css/skins/images/';

		$options = array(
			'default' => $imagepath . 'default.jpg',
			'green' => $imagepath . 'green.jpg',
		);

		return $options;
	}

	add_filter( 'cyberchimps_skin_color', 'fitness_skin_color_options', 1 );

// theme specific background images
	function fitness_background_image( $options ) {
		$imagepath = get_template_directory_uri() . '/cyberchimps/lib/images/';
		$options = array(
			'none' => $imagepath . 'backgrounds/thumbs/none.png',
			'noise' => $imagepath . 'backgrounds/thumbs/noise.png',
			'blue' => $imagepath . 'backgrounds/thumbs/blue.png',
			'dark' => $imagepath . 'backgrounds/thumbs/dark.png',
			'space' => $imagepath . 'backgrounds/thumbs/space.png'
		);

		return $options;
	}

	add_filter( 'cyberchimps_background_image', 'fitness_background_image' );

	/**
	 * Sets header drag and drop defaults
	 *
	 * @param $orig array
	 *
	 * @return array
	 */
	function fitness_header_drag_and_drop_defaults( $orig ) {
		// Just remove banner as there is no styling for this
		unset( $orig[ 'cyberchimps_banner' ] );

		return $orig;
	}

	add_filter( 'header_drag_and_drop_options', 'fitness_header_drag_and_drop_defaults', 20 );

	/**
	 * Removes the banner section
	 *
	 * @param $orig array
	 *
	 * @return array
	 */
	function fitness_pro_header_sections() {
		$new_section[][ 4 ] = array(
			'id' => 'cyberchimps_custom_css_section',
			'label' => __( 'Custom CSS', 'fitness' ),
			'heading' => 'cyberchimps_design_heading'
		);
		$new_section[][ 4 ] = array(
			'id' => 'cyberchimps_header_details_section',
			'label' => __( 'Contact Element', 'fitness' ),
			'heading' => 'cyberchimps_header_heading'
		);
		$new_section[][ 1 ] = array(
			'id' => 'cyberchimps_import_export_section',
			'label' => __( 'Import / Export', 'fitness' ),
			'heading' => 'cyberchimps_import_export_heading'
		);

		return $new_section;
	}

	add_filter( 'cyberchimps_pro_header_sections', 'fitness_pro_header_sections' );

	function fitness_pro_header_fields() {
		$new_field[][ 1 ] = array(
			'name' => __( 'Custom CSS', 'fitness' ),
			'id' => 'custom_css',
			'std' => '',
			'type' => 'csstextarea',
			'section' => 'cyberchimps_custom_css_section',
			'heading' => 'cyberchimps_design_heading'
		);
		$new_field[][ 1 ] = array(
			'name' => __( 'Details', 'fitness' ),
			'id' => 'contact_details',
			'std' => '',
			'type' => 'textarea',
			'section' => 'cyberchimps_header_details_section',
			'heading' => 'cyberchimps_header_heading'
		);
		$new_field[][ 2 ] = array(
			'name' => __( 'Breadcrumbs', 'fitness' ),
			'id' => 'single_post_breadcrumbs',
			'type' => 'toggle',
			'section' => 'cyberchimps_single_post_section',
			'heading' => 'cyberchimps_templates_heading'
		);
		$new_field[][ 2 ] = array(
			'name' => __( 'Breadcrumbs', 'fitness' ),
			'id' => 'archive_breadcrumbs',
			'type' => 'toggle',
			'section' => 'cyberchimps_archive_section',
			'heading' => 'cyberchimps_templates_heading'
		);
		$new_field[][ 4 ] = array(
			'name' => __( 'Cyberchimps Link', 'fitness' ),
			'id' => 'footer_cyberchimps_link',
			'std' => 1,
			'type' => 'toggle',
			'section' => 'cyberchimps_footer_section',
			'heading' => 'cyberchimps_footer_heading'
		);
		$new_field[][ 5 ] = array(
			'name' => __( 'Footer Scripts', 'fitness' ),
			'id' => 'footer_scripts',
			'std' => '',
			'desc' => __( 'Please add script tags', 'fitness' ),
			'type' => 'unfiltered_textarea',
			'section' => 'cyberchimps_footer_section',
			'heading' => 'cyberchimps_footer_heading'
		);
		$new_field[][ 1 ] = array(
			'name' => __( 'Export Settings', 'fitness' ),
			'id' => 'export_textarea',
			'type' => 'export',
			'section' => 'cyberchimps_import_export_section',
			'heading' => 'cyberchimps_import_export_heading'
		);
		$new_field[][ 2 ] = array(
			'name' => __( 'Import Settings', 'fitness' ),
			'id' => 'import_textarea',
			'type' => 'import',
			'section' => 'cyberchimps_import_export_section',
			'heading' => 'cyberchimps_import_export_heading'
		);

		return $new_field;
	}

	add_filter( 'cyberchimps_pro_header_fields', 'fitness_pro_header_fields' );

// theme specific typography options
	function fitness_typography_sizes( $sizes ) {
		$sizes = array( '8', '9', '10', '12', '14', '16', '20' );

		return $sizes;
	}

	function fitness_typography_styles( $styles ) {
		$styles = array( 'normal' => 'Normal', 'bold' => 'Bold' );

		return $styles;
	}

	function fitness_typography_faces( $orig ) {

		$new = array(
			'"Noto Sans", Arial, sans-serif' => 'Noto Sans',
			'"Imprima", Helvetica, Arial, sans-serif' => 'Imprima',
			'"Source Sans Pro", Arial, sans-serif' => 'Source Sans Pro'
		);

		$new = array_merge( $new, $orig );

		return $new;
	}

	function fitness_typography_defaults() {
		$default = array(
			'size' => '16px',
			'face' => '"Source Sans Pro", Arial, sans-serif',
			'style' => 'normal',
			'color' => ''
		);

		return $default;
	}

	function fitness_typography_heading_defaults() {
		$default = array(
			'size' => '',
			'face' => '"Source Sans Pro", Arial, sans-serif',
			'style' => '',
			'color' => '',
		);

		return $default;
	}

	function fitness_max_width_default() {
		return '1180';
	}

	/* Added google font featured text */

	function fitness_fp_add_google_fonts() {
		$protocol = is_ssl() ? 'https' : 'http';
		wp_register_style( 'fp-googleFonts', $protocol . '://fonts.googleapis.com/css?family=Source+Sans+Pro:200,700' );
		wp_enqueue_style( 'fp-googleFonts' );
	}

	add_action( 'wp_print_styles', 'fitness_fp_add_google_fonts' );



	add_filter( 'cyberchimps_typography_sizes', 'fitness_typography_sizes' );
	add_filter( 'cyberchimps_typography_styles', 'fitness_typography_styles' );
	add_filter( 'cyberchimps_typography_faces', 'fitness_typography_faces' );
	add_filter( 'cyberchimps_typography_defaults', 'fitness_typography_defaults' );
	add_filter( 'cyberchimps_typography_heading_defaults', 'fitness_typography_heading_defaults' );
	add_filter( 'max_width_default', 'fitness_max_width_default', '111' );

//change cyberchimps featured image to use this new image size
	function fitness_featured_image_size() {
		return 'blog-page';
	}

	add_filter( 'cyberchimps_post_thumbnail_size', 'fitness_featured_image_size' );

	/**
	 * Adds option for header image
	 *
	 * @param $original array
	 *
	 * @return array
	 */
	function fitness_add_theme_options( $original ) {
		$new_field[][ 1 ] = array(
			'name' => __( 'Header Image', 'fitness' ),
			'id' => 'header_image',
			'std' => '',
			'type' => 'upload',
			'desc' => __( 'The image used for the header needs to be a large image. We recommend a minimum width of 1000px and a maximum height of 550px', 'fitness' ),
			'std' => get_template_directory_uri() . '/images/header.jpg',
			'section' => 'cyberchimps_header_options_section',
			'heading' => 'cyberchimps_header_heading'
		);
		$new_fields = cyberchimps_array_field_organizer( $original, $new_field );

		return $new_fields;
	}

	add_filter( 'cyberchimps_field_filter', 'fitness_add_theme_options', 10 );

	/**
	 * Removes unwanted fields
	 *
	 * @param $orig array field options
	 *
	 * @return array
	 */
	function fitness_remove_default_options( $orig ) {

		$remove = array(
			'searchbar'
		);

		$new_options = cyberchimps_remove_options( $orig, $remove );

		return $new_options;
	}

	add_filter( 'cyberchimps_field_filter', 'fitness_remove_default_options' );

	function fitness_header_drag_and_drop_options() {
		$options = array(
			'cyberchimps_logo' => __( 'Logo', 'fitness' )
		);

		return $options;
	}

	add_filter( 'header_drag_and_drop_options', 'fitness_header_drag_and_drop_options', 50 );

	function fitness_header_drag_and_drop_default() {
		$default = array(
			'cyberchimps_logo' => __( 'Logo', 'fitness' )
		);

		return $default;
	}

	add_filter( 'header_drag_and_drop_default', 'fitness_header_drag_and_drop_default', 50 );

// Additional Fields
	function fitness_fp_additional_fields( $fields_list ) {
		$fields_list[] = array(
			'name' => __( 'Header Featured Title', 'fitness' ),
			'id' => 'header_featured_title',
			'type' => 'text',
			'std' => __( 'Beautifull Wordpress Themes', 'fitness' ),
			'section' => 'cyberchimps_header_options_section',
			'heading' => 'cyberchimps_header_heading'
		);
		$fields_list[] = array(
			'name' => __( 'Header Featured Text', 'fitness' ),
			'id' => 'header_featured_text',
			'type' => 'textarea',
			'std' => __( 'Create a great websites in minutes using a CyberChimps theme ', 'fitness' ),
			'section' => 'cyberchimps_header_options_section',
			'heading' => 'cyberchimps_header_heading'
		);
		$fields_list[] = array(
			'name' => __( 'Header Featured Link', 'fitness' ),
			'id' => 'header_featured_link',
			'type' => 'text',
			'std' => 'http://cyberchimps.com/',
			'section' => 'cyberchimps_header_options_section',
			'heading' => 'cyberchimps_header_heading'
		);
		$fields_list[] = array(
			'name' => __( 'Header Featured Link Text', 'fitness' ),
			'id' => 'header_featured_link_text',
			'type' => 'text',
			'std' => __( 'View Themes & Pricing', 'fitness' ),
			'section' => 'cyberchimps_header_options_section',
			'heading' => 'cyberchimps_header_heading'
		);
		return $fields_list;
	}

	add_filter( 'cyberchimps_field_list', 'fitness_fp_additional_fields', 20, 1 );



	/* Removed default functions on hooks and added new function on hooks */

	function fitness_fp_set_actions() {
		remove_action( 'boxes', 'cyberchimps_boxes_render_display' );
		add_action( 'boxes', 'fitness_fp_boxes_render_display' );

		/* Removed default pagination and added pagination */
		add_action( 'cyberchimps_after_container', 'fitness_nav' );
	}

	add_action( 'init', 'fitness_fp_set_actions' );


	/* Boxes element Markup Changes */

	function fitness_fp_boxes_render_display() {

		// Intialize box counter
		$box_counter = 1;
		$box_id_counter = 1;

		// Set template directory uri
		$template_directory = get_template_directory_uri();

		// Get options for boxes.
		if ( is_page() ) {
			$customcategory = get_post_meta( get_the_ID(), 'boxes_category', true );
			$boxes_per_row = get_post_meta( get_the_ID(), 'boxes_per_row', true );
		} else {
			$customcategory = get_theme_mod( 'boxes_category', '' );
			$boxes_per_row = get_theme_mod( 'boxes_per_row', '' );
		}

		// Decide span width of boxes according to number of boxes per row.
		if ( $boxes_per_row == 2 ) {
			$boxes_span = 'span6';
		} else {
			if ( $boxes_per_row == 3 ) {
				$boxes_span = 'span4';
			}
		}
		if ( $boxes_per_row == 4 ) {
			$boxes_span = 'span3';
		}

		// Custom box query
		$args = array(
			'numberposts' => -1,
			'offset' => 0,
			'boxes_categories' => $customcategory,
			'orderby' => 'post_date',
			'order' => 'ASC',
			'post_type' => 'boxes',
			'post_status' => 'publish',
			'suppress_filters' => false
		);
		$boxes = get_posts( $args );
		?>
		<div id="boxes_container">
			<div class="boxes row-fluid">
				<?php
				if ( $boxes && $customcategory != '' ):
					foreach ( $boxes as $box ):
						$box_read_more_text = '';

						// Break after desired number of boxes displayed
						if ( $box_counter > $boxes_per_row ) {
							echo '</div><div class="boxes row-fluid">';
							$box_counter = 1;
						}

						// Get the image of the box
						$box_image = get_post_meta( $box->ID, 'cyberchimps_box_image', true );

						// Get the URL of the box
						$box_url = get_post_meta( $box->ID, 'cyberchimps_box_url', true );

						// Get the toggle to link the total box.
						$box_total_link = get_post_meta( $box->ID, 'cyberchimps_box_total_link', true );
						
						// Get the text of the box
						$box_text = get_post_meta( $box->ID, 'cyberchimps_box_text', true );
						?>

						<div id="box<?php echo $box_id_counter ?>" class="box <?php echo $boxes_span; ?>">
							<?php if ( $box_url != '' && ! $box_total_link ): ?>
								<a href="<?php echo $box_url; ?>" class="box-link">
								<?php endif; ?>
								<h2 class="box-widget-title"><?php echo $box->post_title; ?></h2>
								<?php if ( $box_url != '' && ! $box_total_link ): ?>
								</a>
							<?php endif; ?>

							<?php if ( $box_url != '' && $box_total_link ): ?>
								<a href="<?php echo $box_url; ?>">
								<?php endif; ?>

								<?php if ( $box_image != '' ): ?>
									<p class="box-image-container"><img class="box-image" src="<?php echo $box_image; ?>"/></p>
								<?php endif; ?>

								 <?php
    $content = $box_text;
    $strings = wordwrap($content, 460, "<!--break-->"); //insert this every 500 chars, but preserve whole words.
    $chunks = explode("<!--break-->", $strings); //create a new string of 500-char sections.

    ob_start(); // buffer the output of the following expressions...
    $count=0;
    foreach($chunks as $chunk_content) {        
        if($count==0){
        echo '<div class="collapse1">'; // use <span> instead of <div> so as to not interrupt the paragraph formatting of the content when viewed normally (graceful degradation).
        echo $chunk_content;
        echo '</div> ';        
        }elseif( $count==1){
        echo '<div class="collapse'.$box->ID.' collapse">'; // use <span> instead of <div> so as to not interrupt the paragraph formatting of the content when viewed normally (graceful degradation).
        echo $chunk_content;
        echo '</div> ';
        }        
         if($count>=1){
        echo '<a data-target=".collapse'.$box->ID.'" data-toggle="collapse" class="navtoggle">Read More →</a>';
        }
        $count++;        
if($count==2) break;
        }
        
    ?>

								<?php if ( $box_url != '' && $box_total_link ): ?>
								</a>
							<?php endif; ?>
						</div><!--end box1-->

						<?php
						$box_counter ++;
						$box_id_counter ++;
					endforeach;
				else:
					?>
					<div class="box span4">
						<a href="http://cyberchimps.com" class="box-link">
							<img class="box-image" src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_box1_image', '/elements/lib/images/boxes/slidericon.png' ); ?>"
								 alt="CyberChimps Slider"/>
						</a>

						<h2 class="box-widget-title"><?php printf( __( '%1$s Slider', 'fitness' ), fitness_options_help_header() ); ?></h2>

						<p><?php printf( __( 'The New Touch Friendly %1$s Slider now responds to any mobile touch device.', 'fitness' ), fitness_options_help_header() ); ?></p>
					</div><!--end box1-->

					<div class="box span4">
						<a href="http://cyberchimps.com" class="box-link">
							<img class="box-image" src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_box2_image', '/elements/lib/images/boxes/blueprint.png' ); ?>"
								 alt="CyberChimps Blueprint"/>
						</a>

						<h2 class="box-widget-title"><?php _e( 'Responsive Design', 'fitness' ); ?></h2>

						<p><?php printf( __( 'With %1$s and touch friendly responsive design you can now control your website on any device.', 'fitness' ), fitness_options_help_header() ); ?></p>
					</div><!--end box3-->

					<div class="box span4">
						<a href="http://cyberchimps.com" class="box-link">
							<img class="box-image" src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_box3_image', '/elements/lib/images/boxes/docs.png' ); ?>"
								 alt="CyberChimps Help"/>
						</a>

						<h2 class="box-widget-title"><?php _e( 'Excellent Support', 'fitness' ); ?></h2>

						<p><?php _e( 'Need help? Read the instructions and please visit our dedicated Pro Support Forum.', 'fitness' ); ?></p>
					</div><!--end box4-->

				<?php
				endif;
				?>
			</div>
			<!-- end boxes -->
		</div><!-- end row-fluid -->
		<?php
	}

	/* Added default wordpress navigation Previous post and Next post */

	function fitness_nav( $html_id ) {
		global $wp_query;

		$html_id = esc_attr( $html_id );

		if ( $wp_query->max_num_pages > 1 ) :
			?>
			<nav id="navigation-container" class="navigation row-fluid" role="navigation">
				<?php if ( get_next_posts_link() ) { ?>
					<div class="nav-previous span6 pull-left"><span class="meta-nav">&larr;</span> <?php next_posts_link( __( ' Previous posts', 'fitness' ) ); ?></div>
				<?php } ?>
				<?php if ( get_previous_posts_link() ) { ?>
					<div class="nav-next span6 pull-right"><?php previous_posts_link( __( 'Newer posts', 'fitness' ) ); ?><span class="meta-nav">&rarr;</span></div>
				<?php } ?>
		</nav><!-- #<?php echo $html_id; ?> .navigation -->
			<?php
		endif;
	}

	/* Removed separator for post meta */
	add_filter( 'cyberchimps_entry_meta_sep', 'fitness_fp_sep' );

	function fitness_fp_sep() {
		return '';
	}

	/* Added theme specific options in customizer */

	function fitness_fp_customize_register( $wp_customize ) {
            
            $wp_customize->remove_setting( 'searchbar' );
        $wp_customize->remove_control( 'searchbar' );

		/* Blog Section Title and Description */

		$wp_customize->add_setting( 'header_featured_title', array(
			'default' => 'Beautiful WordPress Themes',
			'sanitize_callback' => 'cyberchimps_text_sanitization'
		) );
		$wp_customize->add_control( 'header_featured_title', array(
			'label' => __( 'Header Featured Title', 'fitness' ),
			'section' => 'cyberchimps_header_section',
			'settings' => 'header_featured_title',
			'type' => 'text'
		) );


		$wp_customize->add_setting( 'header_featured_text', array(
			'default' => 'Create a great website in minutes using CyberChimps theme',
			'sanitize_callback' => 'cyberchimps_text_sanitization'
		) );

		$wp_customize->add_control( 'header_featured_text', array(
			'label' => __( 'Header Featured Text', 'fitness' ),
			'section' => 'cyberchimps_header_section',
			'settings' => 'header_featured_text',
			'type' => 'textarea'
		) );


		$wp_customize->add_setting( 'header_featured_link', array(
			'default' => '#',
			'sanitize_callback' => 'cyberchimps_text_sanitization'
		) );

		$wp_customize->add_control( 'header_featured_link', array(
			'label' => __( 'Header Featured Link', 'fitness' ),
			'section' => 'cyberchimps_header_section',
			'settings' => 'header_featured_link',
			'type' => 'text'
		) );


		$wp_customize->add_setting( 'header_featured_link_text', array(
			'default' => 'View Theme & Pricing',
			'sanitize_callback' => 'cyberchimps_text_sanitization'
		) );

		$wp_customize->add_control( 'header_featured_link_text', array(
			'label' => __( 'Header Featured Link Text', 'fitness' ),
			'section' => 'cyberchimps_header_section',
			'settings' => 'header_featured_link_text',
			'type' => 'text'
		) );
		
		$theme_options_main = get_option('theme_mods_'.get_template());
		if(!isset($theme_options_main['header_featured_title']))
		{
			set_theme_mod('header_featured_title', 'Beautiful WordPress Themes');
		}
		if(!isset($theme_options_main['header_featured_text']))
		{
			set_theme_mod('header_featured_text', 'Create a great website in minutes using CyberChimps theme');
		}
		if(!isset($theme_options_main['header_featured_link']))
		{
			set_theme_mod('header_featured_link', '#');
		}
		if(!isset($theme_options_main['header_featured_link_text']))
		{
			set_theme_mod('header_featured_link_text', 'View Theme & Pricing');
		}
		
	}

	add_action( 'customize_register', 'fitness_fp_customize_register', 50 );

	add_filter('cyberchimps_slider_lite_img2' , 'fitness_slider_lite_img');
	add_filter('cyberchimps_slider_lite_img3' , 'fitness_slider_lite_img');
	
	function fitness_slider_lite_img($img){
		$img = '/images/branding/slide1.jpg';
		return $img;
	}
	
	add_filter('cyberchimps_portfolio_lite_img1' , 'fitness_portfolio_lite_img');
	add_filter('cyberchimps_portfolio_lite_img2' , 'fitness_portfolio_lite_img');
	add_filter('cyberchimps_portfolio_lite_img3' , 'fitness_portfolio_lite_img');
	add_filter('cyberchimps_portfolio_lite_img4' , 'fitness_portfolio_lite_img');
	
	function fitness_portfolio_lite_img($img){
		$img = '/images/portfolio/port1.jpg';
		return $img;
	}
	
	add_filter('cyberchimps_boxes_lite_img1' , 'fitness_boxes_lite_img');
	add_filter('cyberchimps_boxes_lite_img2' , 'fitness_boxes_lite_img');
	add_filter('cyberchimps_boxes_lite_img3' , 'fitness_boxes_lite_img');

	function fitness_boxes_lite_img($img){
		$img = '/images/boxes/box1.jpg';
		return $img;		
	}
	
	add_filter( 'cyberchimp_blog_section_order', 'fitness_blog_section_order' );
	
	function fitness_blog_section_order($blog_section_order){
	
		$blog_section_order[0] = 'boxes_lite';
		$blog_section_order[1] = 'slider_lite';
		$blog_section_order[2] = 'portfolio_lite';
		$blog_section_order[3] = 'blog_post_page';
	
		return $blog_section_order;
	
	}
	
	add_filter('cyberchimps_display_logo_option' , 'fitness_display_logo_option');
	function fitness_display_logo_option($val){
		$val = '1';
		return $val;
	}
	
	add_filter('cyberchimps_default_logo' , 'fitness_default_logo');
	function fitness_default_logo($img){
		$img = get_template_directory_uri() . '/images/logo.png';
		return $img;
	}
	
	
	function fitness_default_scripts() {
		wp_enqueue_script( 'cyberchimps-custom-script', get_template_directory_uri() . '/inc/js' . '/custom-scripts.js', array( 'jquery' ), '', true );
	}

	add_action( 'wp_enqueue_scripts', 'fitness_default_scripts' );
 
// more text for search results excerpt
function fitness_blog_excerpt_more_text( $more ) {
	global $post;
        $linktext = cyberchimps_blog_read_more_text();
	if( $linktext != '' ) {
		$more = '&hellip;<p><a class="excerpt-more" href="' . get_permalink( $post->ID ) . '">' . $linktext . '</a></p>';

		return $more;
	}
	else {
		$more = '&hellip;<p><a class="excerpt-more search-excerpt" href="' . get_permalink( $post->ID ) . '">' . __( 'Read More...', 'cyberchimps_core' ) . '</a></p>';

		return $more;
	}
}

// Remove header contact option as it is not suitable to the design in this theme.
function fitness_header_details_section_drag_drop( $sections_list ) {
	return cyberchimps_remove_options( $sections_list, array( 'cyberchimps_header_details_section' ) );
}
add_filter( 'cyberchimps_sections_filter', 'fitness_header_details_section_drag_drop' );
